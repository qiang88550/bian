name: NodeJS with Grunt

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Build
      run: |
        npm install
        grunt
            - 名称：设置 Node.js 环境
    # 在 npmrc 中设置 always-auth。
    always-auth: # 可选，默认为 false
    # 要使用的版本的版本规范。示例：12.x、10.15.1、>=10.15.0。
    节点版本：#可选
    # 包含要使用的版本的版本规范的文件。示例：package.json、.nvmrc、.node-version、.tool-versions。
    node-version-file: # 可选
    # Node 要使用的目标架构。示例：x86、x64。默认情况下将使用系统架构。
    架构：#可选
    # 如果您希望操作检查满足版本规范的最新可用版本，请设置此选项。
    检查最新：#可选
    # 可选注册表，用于设置身份验证。将在项目级 .npmrc 和 .yarnrc 文件中设置注册表，并设置身份验证以从 env.NODE_AUTH_TOKEN 读取。
    registry-url: # 可选
    # 用于针对范围注册表进行身份验证的可选范围。使用 GitHub Packages 注册表 (https://npm.pkg.github.com/) 时将返回到存储库所有者。
    范围：#可选
    # 用于从节点版本中提取节点分布。由于存在默认值，因此用户通常不提供该值。在 github.com 上运行此操作时，默认值就足够了。在 GHES 上运行时，如果您遇到速率限制，则可以传递 github.com 的个人访问令牌。
    token: # 可选，默认为 ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # 用于指定在默认目录中缓存的包管理器。支持的值：npm、yarn、pnpm。
    缓存：#可选
    # 用于指定依赖文件的路径：package-lock.json、yarn.lock 等。支持通配符或文件名列表，用于缓存多个依赖项。
    缓存依赖路径：#可选
          
